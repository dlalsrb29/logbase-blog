"use strict";(()=>{var e={};e.id=527,e.ids=[527],e.modules={145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3292:e=>{e.exports=require("fs/promises")},1017:e=>{e.exports=require("path")},6249:(e,s)=>{Object.defineProperty(s,"l",{enumerable:!0,get:function(){return function e(s,t){return t in s?s[t]:"then"in s&&"function"==typeof s.then?s.then(s=>e(s,t)):"function"==typeof s&&"default"===t?s:void 0}}})},5184:(e,s,t)=>{t.r(s),t.d(s,{config:()=>m,default:()=>p,routeModule:()=>P});var r={};t.r(r),t.d(r,{default:()=>S});var o=t(1802),n=t(7153),i=t(6249),a=t(3292),u=t.n(a),c=t(1017),l=t.n(c);let f=l().join(process.cwd(),"public","feeds.json"),d=l().join(process.cwd(),"functions","public","feeds.json");async function S(e,s){if(s.setHeader("Access-Control-Allow-Origin","*"),s.setHeader("Access-Control-Allow-Methods","GET, POST, PUT, DELETE, OPTIONS"),s.setHeader("Access-Control-Allow-Headers","Content-Type, Authorization"),"OPTIONS"===e.method){s.status(200).end();return}if("GET"===e.method)try{let e=await u().readFile(f,"utf-8"),t=JSON.parse(e);s.status(200).json({success:!0,feeds:t})}catch(e){console.error("RSS 피드 파일 읽기 오류:",e),s.status(500).json({success:!1,error:"RSS 피드 파일을 읽을 수 없습니다."})}else if("POST"===e.method)try{let{name:t,url:r,type:o,status:n}=e.body;if(!t||!r||!o||!n)return s.status(400).json({success:!1,error:"모든 필드를 입력해주세요."});if("competitor"!==o&&"noncompetitor"!==o)return s.status(400).json({success:!1,error:"타입은 competitor 또는 noncompetitor여야 합니다."});if("active"!==n&&"error"!==n)return s.status(400).json({success:!1,error:"상태는 active 또는 error여야 합니다."});let i=await u().readFile(f,"utf-8"),a=JSON.parse(i);if(a.some(e=>e.name===t))return s.status(400).json({success:!1,error:"이미 존재하는 피드 이름입니다."});a.push({name:t,url:r,type:o,status:n}),await u().writeFile(f,JSON.stringify(a,null,2),"utf-8");try{await u().writeFile(d,JSON.stringify(a,null,2),"utf-8"),console.log("[feeds] Firebase Functions 파일도 업데이트됨")}catch(e){console.warn("[feeds] Firebase Functions 파일 업데이트 실패:",e)}s.status(200).json({success:!0,message:"RSS 피드가 추가되었습니다.",feeds:a})}catch(e){console.error("RSS 피드 추가 오류:",e),s.status(500).json({success:!1,error:"RSS 피드 추가 중 오류가 발생했습니다."})}else if("PUT"===e.method)try{let{oldName:t,name:r,url:o,type:n,status:i}=e.body;if(!t||!r||!o||!n||!i)return s.status(400).json({success:!1,error:"모든 필드를 입력해주세요."});if("competitor"!==n&&"noncompetitor"!==n)return s.status(400).json({success:!1,error:"타입은 competitor 또는 noncompetitor여야 합니다."});if("active"!==i&&"error"!==i)return s.status(400).json({success:!1,error:"상태는 active 또는 error여야 합니다."});let a=await u().readFile(f,"utf-8"),c=JSON.parse(a),l=c.findIndex(e=>e.name===t);if(-1===l)return s.status(404).json({success:!1,error:"수정할 RSS 피드를 찾을 수 없습니다."});if(c.some(e=>e.name===r&&e.name!==t))return s.status(400).json({success:!1,error:"이미 존재하는 피드 이름입니다."});c[l]={name:r,url:o,type:n,status:i},await u().writeFile(f,JSON.stringify(c,null,2),"utf-8");try{await u().writeFile(d,JSON.stringify(c,null,2),"utf-8"),console.log("[feeds] Firebase Functions 파일도 업데이트됨")}catch(e){console.warn("[feeds] Firebase Functions 파일 업데이트 실패:",e)}s.status(200).json({success:!0,message:"RSS 피드가 수정되었습니다.",feeds:c})}catch(e){console.error("RSS 피드 수정 오류:",e),s.status(500).json({success:!1,error:"RSS 피드 수정 중 오류가 발생했습니다."})}else if("DELETE"===e.method)try{let{name:t}=e.body;if(!t||"string"!=typeof t)return s.status(400).json({success:!1,error:"유효한 피드 이름을 입력해주세요."});let r=await u().readFile(f,"utf-8"),o=JSON.parse(r),n=o.findIndex(e=>e.name===t);if(-1===n)return s.status(404).json({success:!1,error:"삭제할 RSS 피드를 찾을 수 없습니다."});o.splice(n,1),await u().writeFile(f,JSON.stringify(o,null,2),"utf-8");try{await u().writeFile(d,JSON.stringify(o,null,2),"utf-8"),console.log("[feeds] Firebase Functions 파일도 업데이트됨")}catch(e){console.warn("[feeds] Firebase Functions 파일 업데이트 실패:",e)}s.status(200).json({success:!0,message:"RSS 피드가 삭제되었습니다.",feeds:o})}catch(e){console.error("RSS 피드 삭제 오류:",e),s.status(500).json({success:!1,error:"RSS 피드 삭제 중 오류가 발생했습니다."})}else s.setHeader("Allow",["GET","POST","PUT","DELETE"]),s.status(405).end(`Method ${e.method} Not Allowed`)}let p=(0,i.l)(r,"default"),m=(0,i.l)(r,"config"),P=new o.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/feeds",pathname:"/api/feeds",bundlePath:"",filename:""},userland:r})},7153:(e,s)=>{var t;Object.defineProperty(s,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,s,t)=>{e.exports=t(145)}};var s=require("../../webpack-api-runtime.js");s.C(e);var t=s(s.s=5184);module.exports=t})();